//
//  Words.swift
//  EnglishTests
//
//  Created by M on 11.11.2021.
//

import UIKit

var foodWordsQuestion = [
    "–º–∏–Ω–¥–∞–ª—å" : "almond",
    "–∞–±—Ä–∏–∫–æ—Å" : "apricot",
    "–µ–∂–µ–≤–∏–∫–∞" : "blackberry",
    "—á–µ—Ä–Ω–∏–∫–∞" : "blueberry",
    "–∫–µ—à—å—é" : "cashew",
    "–≤–∏—à–Ω—è" : "cherry",
    "–∫–ª—é–∫–≤–∞" : "cranberry",
    "–≤–∏–Ω–æ–≥—Ä–∞–¥" : "grape",
    "–ª–µ—Å–Ω–æ–π –æ—Ä–µ—Ö" : "hazelnut",
    "–ª–∏–º–æ–Ω" : "lemon",
    "–¥—ã–Ω—è" : "melon",
    "–ø–µ—Ä—Å–∏–∫" : "peach",
    "–∞—Ä–∞—Ö–∏—Å" : "peanut",
    "–≥—Ä—É—à–∞" : "pear",
    "–∞–Ω–∞–Ω–∞—Å" : "pineapple",
    "—Å–ª–∏–≤–∞" : "plum",
    "–º–∞–ª–∏–Ω–∞" : "raspberry",
    "–∫–ª—É–±–Ω–∏–∫–∞" : "strawberry",
    "–≥—Ä–µ—Ü–∫–∏–π –æ—Ä–µ—Ö" : "walnut",
    "–∞—Ä–±—É–∑" : "watermelon",
    "–≥—Ä–∞–Ω–∞—Ç" : "garnet",
    "–æ–≥—É—Ä–µ—Ü" : "cucumber",
    "–º–∞–Ω–≥–æ" : "mango",
    "—Ä–µ–¥–∏—Å" : "radish",
    "–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å" : "potato",
    "–º–æ—Ä–∫–æ–≤—å" : "carrot",
    "—Å–≤–µ–∫–ª–∞" : "beet",
    "—Ö—Ä–µ–Ω" : "horseradish",
    "–ª—É–∫" : "onion",
    "–ø–µ—Ä–µ—Ü" : "pepper",
    "—á–µ—Ä–µ—à–Ω—è" : "cherries",
    "–∞–≤–æ–∫–∞–¥–æ" : "avocado",
    "–±–∞–Ω–∞–Ω" : "banana",
    "–º–∞–Ω–¥–∞—Ä–∏–Ω" : "tangerine",
    "–≥–æ–ª—É–±–∏–∫–∞" : "blueberry",
    "—Ñ—É–Ω–¥—É–∫" : "hazelnut",
    "–∫—É–∫—É—Ä—É–∑–∞" : "corn",
    "–±–∞–∫–ª–∞–∂–∞–Ω" : "eggplant",
    "—Ç—ã–∫–≤–∞" : "pumpkin",
    "–±—Ä–æ–∫–∫–æ–ª–∏" : "broccoli",
    "–∫–∞–ø—É—Å—Ç–∞" : "cabbage",
    "–∫–∞–±–∞—á–æ–∫" : "zucchini",
    "—á–µ—Å–Ω–æ–∫" : "garlic",
    "—Ä–µ–ø–∞" : "turnip",
    "–ø–æ–º–∏–¥–æ—Ä" : "tomato",
    "–∫–æ–∫–æ—Å" : "coconut",
    "—Ü–≤–µ—Ç–Ω–∞—è –∫–∞–ø—É—Å—Ç–∞" : "cauliflower",
    "–≥—É–∞–≤–∞" : "guava",
    "–ø–∞–ø–∞–π—è" : "papaya",
    "–≥–æ—Ä–æ—Ö" : "peas",
    "–∫—Ä—ã–∂–æ–≤–Ω–∏–∫" : "gooseberry",
    "–∫–∏–≤–∏" : "kiwi",
    "–∏–Ω–∂–∏—Ä" : "figs",
    "–∞–π–≤–∞" : "quince",
    "–∞–ª—ã—á–∞" : "cherry plum",
    "–±–æ—è—Ä—ã—à–Ω–∏–∫" : "hawthorn",
    "–≥—Ä–µ–π–ø—Ñ—Ä—É—Ç" : "grapefruit",
    "–º–∞—Ä–∞–∫—É–π—è" : "passion fruit",
    "–Ω–µ–∫—Ç–∞—Ä–∏–Ω" : "nectarine",
    "—Ñ–µ–π—Ö–æ–∞" : "feijoa",
    "—Ö—É—Ä–º–∞" : "persimmon",
    "–∏–º–±–∏—Ä—å" : "ginger",
    "—Ç–æ–ø–∏–Ω–∞–º–±—É—Ä" : "jerusalem artichoke",
    "—à–ø–∏–Ω–∞—Ç" : "spinach",
    "—Å–µ–ª—å–¥–µ—Ä–µ–π" : "celery",
    "—â–∞–≤–µ–ª—å" : "sorrel",
    "–ø–µ—Ç—Ä—É—à–∫–∞" : "parsley",
    "—É–∫—Ä–æ–ø" : "dill",
    "—Å–ø–∞—Ä–∂–∞" : "asparagus",
    "–±–∞–∑–∏–ª–∏–∫" : "basil",
    "—Ä—É–∫–∫–æ–ª–∞" : "arugula",
    "–≥–æ—Ä—á–∏—Ü–∞" : "mustard",
    "–ª—É–∫-–ø–æ—Ä–µ–π" : "leek",
    "—Å–º–æ—Ä–æ–¥–∏–Ω–∞" : "currant",
    "—á–µ—á–µ–≤–∏—Ü–∞" : "lentils",
    "–≥—Ä–∏–±—ã" : "mushrooms",
    "—Ä–∏—Å" : "rice",
    "–ø—à–µ–Ω–∏—Ü–∞" : "wheat",
    "–æ–≤—ë—Å" : "oats",
    "–æ–ª–∏–≤–∫–∏" : "olives",
    "–º—è—Ç–∞" : "mint",
    "–∫—É–Ω–∂—É—Ç" : "sesame",
    "–∏–∑—é–º" : "raisin"
]

let happyMemojies = [
    "üôÉ","üòá","üòè","ü•≥","ü§©","ü§™","ü§ó","ü§§"
]

let sadMemojies = [
"üòñ", "üò©", "üò•", "üòµ‚Äçüí´", "üò≠", "üòî", "üò£", "üòí"
]

var foodWordStatictic = [String : Int]()

func createWordStatistic () -> [String : Int] {
    var dictForHelp = foodWordsQuestion
    for (key, value) in dictForHelp {dictForHelp[key, default: value] = "\(0)"}
    foodWordStatictic = dictForHelp.compactMapValues { str in Int(str)
    }
    return foodWordStatictic
}








var foodWordsAnswer = [String]()



var questionQountValue = 1
var trueAnswers = 0 //–∫–æ–ª-–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
var answer = 0 //—Ñ–ª–∞–≥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
var testWord = ""

extension TestsViewController {
  
    func addFoodWordsAnswer(Dictionary: [String : String]) -> [String] {
        for values in Dictionary {
            foodWordsAnswer.append("\(Dictionary.values)")
        }
        return foodWordsAnswer
    } //—Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤

    
    
    
    
    
    
    
    func firstAnswerPressed() {
    
        if firstAnswerButton.currentTitle == testWord {
            firstAnswerButton.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            answer = 1
            questionLabel.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            secondAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = happyMemojies.randomElement()

        } else {
            firstAnswerButton.backgroundColor = .red
            secondAnswerButton.backgroundColor = .red
            thirdAnswerButton.backgroundColor = .red
            forthAnswerButton.backgroundColor = .red
            firstAnswerButton.isEnabled = false
            secondAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = sadMemojies.randomElement()
            successfullyBookedFlight()
        }
    }
    
    
    func secondAnswerPressed() {
        if secondAnswerButton.currentTitle == testWord {
            secondAnswerButton.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            answer = 1
            questionLabel.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            firstAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = happyMemojies.randomElement()

        } else {
            firstAnswerButton.backgroundColor = .red
            secondAnswerButton.backgroundColor = .red
            thirdAnswerButton.backgroundColor = .red
            forthAnswerButton.backgroundColor = .red
            firstAnswerButton.isEnabled = false
            secondAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = sadMemojies.randomElement()
            successfullyBookedFlight()

        }
    }
    
    
    
    func thirdAnswerPressed() {
        if thirdAnswerButton.currentTitle == testWord {
            thirdAnswerButton.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            answer = 1
            questionLabel.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            firstAnswerButton.isEnabled = false
            secondAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = happyMemojies.randomElement()

        } else {
            firstAnswerButton.backgroundColor = .red
            secondAnswerButton.backgroundColor = .red
            thirdAnswerButton.backgroundColor = .red
            forthAnswerButton.backgroundColor = .red
            firstAnswerButton.isEnabled = false
            secondAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = sadMemojies.randomElement()
            successfullyBookedFlight()

        }
    }
    
    
    
    func forthAnswerPressed() {
        if forthAnswerButton.currentTitle == testWord {
            forthAnswerButton.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            answer = 1
            questionLabel.backgroundColor = UIColor.init(red: 33/255, green: 157/255, blue: 34/255, alpha: 1)
            firstAnswerButton.isEnabled = false
            secondAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            memojiLabel.text = happyMemojies.randomElement()

        } else {
            firstAnswerButton.backgroundColor = .red
            secondAnswerButton.backgroundColor = .red
            thirdAnswerButton.backgroundColor = .red
            forthAnswerButton.backgroundColor = .red
            firstAnswerButton.isEnabled = false
            secondAnswerButton.isEnabled = false
            thirdAnswerButton.isEnabled = false
            forthAnswerButton.isEnabled = false
            memojiLabel.text = sadMemojies.randomElement()
            successfullyBookedFlight()

        }
    }

    
    
    func nextQuestionFalse() { //—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ
        memojiLabel.text = "ü§î"
        answer = 0
        progressView.progress += 0.1
        
        
        
        firstAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        secondAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        thirdAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        forthAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        questionLabel.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        
        firstAnswerButton.isEnabled = true
        secondAnswerButton.isEnabled = true
        thirdAnswerButton.isEnabled = true
        forthAnswerButton.isEnabled = true
        firstAnswerButton.layer.cornerRadius = 10
        secondAnswerButton.layer.cornerRadius = 10
        thirdAnswerButton.layer.cornerRadius = 10
        forthAnswerButton.layer.cornerRadius = 10
        questionLabel.layer.masksToBounds = true
        questionLabel.layer.cornerRadius = 10

        questionQount.text = String(questionQountValue)

        if questionQountValue < 11 {
            questionQountValue = questionQountValue + 1

            let randomQuestion = foodWordsQuestion.randomElement()

            let randomAnswerOne = randomQuestion?.value
            let randomanswerTwo = foodWordsQuestion.randomElement()?.value
            let randomAnswerThree = foodWordsQuestion.randomElement()?.value
            let randomanswerFour = foodWordsQuestion.randomElement()?.value
         
            let randomAnswers = [randomAnswerOne, randomanswerTwo, randomAnswerThree, randomanswerFour]
            let shuffleRandomAnswers = randomAnswers.shuffled()

            questionLabel.text = randomQuestion?.key
            firstAnswerButton.setTitle(String(shuffleRandomAnswers[0] ?? "error"), for: .normal)
            secondAnswerButton.setTitle(String(shuffleRandomAnswers[1] ?? "error"), for: .normal)
            thirdAnswerButton.setTitle(String(shuffleRandomAnswers[2] ?? "error"), for: .normal)
            forthAnswerButton.setTitle(String(shuffleRandomAnswers[3] ?? "error"), for: .normal)
            testWord = randomAnswerOne ?? "error"
            wordsLabel.text = testWord
            questionQount.text = String(questionQountValue)
            
            foodImageView.image = UIImage(named: "\(testWord)")

            
            foodWordsQuestion.removeValue(forKey: questionLabel.text ?? "") //–ò–°–ö–õ–Æ–ß–ê–ï–¢ –ü–†–ï–î–´–î–£–©–ï–ï –°–õ–û–í–û

        }
 else if questionQountValue == 11 {
     questionQountValue = 1
     //–¢–£–¢ –°–î–ï–õ–ê–¢–¨ –û–ü–û–í–ï–©–ï–ù–ò–ï –û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–• –¢–ï–°–¢–ê
     
     dismiss(animated: true)
        }
    }
        

    
    
    func nextQuestion() { //—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ—Ç–≤–µ—Ç–µ
        memojiLabel.text = "ü§î"
        trueAnswers = trueAnswers + 1
        answer = 0
        progressView.progress += 0.1
        firstAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        secondAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        thirdAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        forthAnswerButton.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)
        questionLabel.backgroundColor = UIColor.init(red: 40/255, green: 38/255, blue: 38/255, alpha: 1)

        firstAnswerButton.isEnabled = true
        secondAnswerButton.isEnabled = true
        thirdAnswerButton.isEnabled = true
        forthAnswerButton.isEnabled = true
        
        firstAnswerButton.layer.cornerRadius = 10
        secondAnswerButton.layer.cornerRadius = 10
        thirdAnswerButton.layer.cornerRadius = 10
        forthAnswerButton.layer.cornerRadius = 10

        questionLabel.layer.masksToBounds = true
        questionLabel.layer.cornerRadius = 10
        
        
        

        if questionQountValue < 11 {
            questionQountValue = questionQountValue + 1

            let randomQuestion = foodWordsQuestion.randomElement()
            let randomAnswerOne = randomQuestion?.value
            let randomanswerTwo = foodWordsQuestion.randomElement()?.value
            let randomAnswerThree = foodWordsQuestion.randomElement()?.value
            let randomanswerFour = foodWordsQuestion.randomElement()?.value

            let randomAnswers = [randomAnswerOne, randomanswerTwo, randomAnswerThree, randomanswerFour]
            let shuffleRandomAnswers = randomAnswers.shuffled()

            questionLabel.text = randomQuestion?.key
            firstAnswerButton.setTitle(String(shuffleRandomAnswers[0] ?? "error"), for: .normal)
            secondAnswerButton.setTitle(String(shuffleRandomAnswers[1] ?? "error"), for: .normal)
            thirdAnswerButton.setTitle(String(shuffleRandomAnswers[2] ?? "error"), for: .normal)
            forthAnswerButton.setTitle(String(shuffleRandomAnswers[3] ?? "error"), for: .normal)
            testWord = randomAnswerOne ?? "error"
            wordsLabel.text = testWord
            questionQount.text = String(questionQountValue)
            trueAnswersLabel.text = String(trueAnswers)
            
            foodImageView.image = UIImage(named: "\(testWord)")

            
            foodWordsQuestion.removeValue(forKey: questionLabel.text ?? "") //–ò–°–ö–õ–Æ–ß–ê–ï–¢ –ü–†–ï–î–´–î–£–©–ï–ï –°–õ–û–í–û
            
        }
        
        
        else if questionQountValue == 11 {
            questionQountValue = 1
            //–¢–£–¢ –°–î–ï–õ–ê–¢–¨ –û–ü–û–í–ï–©–ï–ù–ò–ï –û –†–ï–ó–£–õ–¨–¢–ê–¢–ê–• –¢–ï–°–¢–ê

            dismiss(animated: true)
    
    }
    }
    
}







    

